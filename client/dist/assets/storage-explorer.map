{"version":3,"sources":["storage-explorer/adapters/application.js","storage-explorer/app.js","storage-explorer/controllers/application.js","storage-explorer/controllers/error.js","storage-explorer/controllers/table.js","storage-explorer/initializers/app-version.js","storage-explorer/initializers/export-application-global.js","storage-explorer/models/column.js","storage-explorer/models/row.js","storage-explorer/models/table.js","storage-explorer/router.js","storage-explorer/routes/table.js","storage-explorer/routes/tables.js","storage-explorer/serializers/row.js","storage-explorer/serializers/table.js","storage-explorer/templates/application.js","storage-explorer/templates/error.js","storage-explorer/templates/table.js","storage-explorer/templates/tables.js","storage-explorer/tests/adapters/application.jshint.js","storage-explorer/tests/app.jshint.js","storage-explorer/tests/controllers/application.jshint.js","storage-explorer/tests/controllers/error.jshint.js","storage-explorer/tests/controllers/table.jshint.js","storage-explorer/tests/helpers/resolver.js","storage-explorer/tests/helpers/resolver.jshint.js","storage-explorer/tests/helpers/start-app.js","storage-explorer/tests/helpers/start-app.jshint.js","storage-explorer/tests/models/column.jshint.js","storage-explorer/tests/models/row.jshint.js","storage-explorer/tests/models/table.jshint.js","storage-explorer/tests/router.jshint.js","storage-explorer/tests/routes/table.jshint.js","storage-explorer/tests/routes/tables.jshint.js","storage-explorer/tests/serializers/row.jshint.js","storage-explorer/tests/serializers/table.jshint.js","storage-explorer/tests/test-helper.js","storage-explorer/tests/test-helper.jshint.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('storage-explorer/adapters/application', ['exports', 'ember', 'ember-data', 'storage-explorer/config/environment'], function (exports, Ember, DS, config) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTAdapter.extend({\n\t\thost: config['default'].APP.apiHost,\n\n\t\tajax: function (url, type, hash) {\n\t\t\tif (Ember['default'].isEmpty(hash)) {\n\t\t\t\thash = {};\n\t\t\t}\n\n\t\t\tif (Ember['default'].isEmpty(hash.data)) {\n\t\t\t\thash.data = {};\n\t\t\t}\n\n\t\t\thash.data.account = localStorage.storageAccountName;\n\t\t\thash.data.key = localStorage.storageAccountKey;\n\n\t\t\treturn this._super(url, type, hash);\n\t\t}\n\n\t\t/*\r\n\t headers: function() {\r\n\t \treturn {\r\n\t \t\t\"storage_account_name\": localStorage.storageAccountName,\r\n\t         \"storage_account_key\": localStorage.storageAccountKey\r\n\t \t};\r\n\t }.property().volatile()\r\n\t */\n\t});\n\n});","define('storage-explorer/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'storage-explorer/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('storage-explorer/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        init: function () {\n            this._super();\n        },\n\n        showProgress: false,\n\n        loadDisabled: (function () {\n            var account = this.get(\"accountName\"),\n                key = this.get(\"accountKey\");\n\n            if (account && key) {\n                return false;\n            }\n\n            return true;\n        }).property(\"accountName\", \"accountKey\"),\n\n        storageAccountName: (function () {\n            var name = this.get(\"accountName\");\n\n            if (!name) {\n                return;\n            }\n\n            name = \"sueandjason\";\n\n            localStorage.storageAccountName = name;\n            return encodeURIComponent(name);\n        }).property(\"accountName\"),\n\n        storageAccountKey: (function () {\n            var key = this.get(\"accountKey\");\n\n            if (!key) {\n                return;\n            }\n\n            key = \"VdSeV70ua7RcuTMW7vPDhAU+Kyzo/hBOb6oOt8zQ5oU4wFrrwOGVEa8bYxfcEcm2G6HeKDh48OSpOUqDQ7tHOA==\";\n\n            localStorage.storageAccountKey = key;\n            return encodeURIComponent(key);\n        }).property(\"accountKey\"),\n\n        actions: {\n            load: function () {\n                this.transitionToRoute(\"tables\");\n            }\n        }\n    });\n\n});","define('storage-explorer/controllers/error', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ErrorController = Ember['default'].Controller.extend({\n        code: (function () {\n            return this.get(\"content.status\") > 200 ? this.get(\"content.status\") : 500;\n        }).property(\"content.status\"),\n\n        response: (function () {\n            return this.get(\"content.responseText\") || this.get(\"content.statusText\");\n        }).property(\"content.responseText\", \"content.statusText\") });\n\n    exports['default'] = ErrorController;\n\n});","define('storage-explorer/controllers/table', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n    showProgress: false,\n\n    rowCount: (function () {\n      return this.get(\"content\").length;\n    }).property(\"content\"),\n\n    rowHeader: (function () {\n      var header = {};\n\n      this.get(\"content\").forEach(function (row) {\n        Ember['default'].$.map(row, function (value, key) {\n          header[key] = key;\n        });\n      });\n\n      return Object.keys(header);\n    }).property(\"content\"),\n\n    rowData: (function () {\n      var rows = [];\n\n      var rowHeader = this.get(\"rowHeader\");\n      this.get(\"content\").forEach(function (row) {\n        rows.push(Ember['default'].$.map(rowHeader, function (header) {\n          var value = row[header];\n          if (value === undefined) {\n            value = \"\";\n          }\n          return value;\n        }));\n      });\n\n      return rows;\n    }).property(\"content\", \"rowHeader\")\n\n  });\n\n});","define('storage-explorer/initializers/app-version', ['exports', 'storage-explorer/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('storage-explorer/initializers/export-application-global', ['exports', 'ember', 'storage-explorer/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('storage-explorer/models/column', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var column = DS['default'].Model.extend({\n        key: DS['default'].attr(\"string\"),\n        value: DS['default'].attr(\"string\"),\n        row: DS['default'].belongsTo(\"row\")\n    });\n\n    exports['default'] = column;\n\n});","define('storage-explorer/models/row', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var row = DS['default'].Model.extend({\n        partitionKey: DS['default'].attr(\"string\"),\n        rowKey: DS['default'].attr(\"string\"),\n        table: DS['default'].belongsTo(\"table\"),\n        columns: DS['default'].hasMany(\"column\")\n    });\n\n    exports['default'] = row;\n\n});","define('storage-explorer/models/table', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var table = DS['default'].Model.extend({\n        tableName: DS['default'].attr(\"string\"),\n        rows: DS['default'].hasMany(\"row\")\n    });\n\n    exports['default'] = table;\n\n});","define('storage-explorer/router', ['exports', 'ember', 'storage-explorer/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {\n        this.resource(\"tables\", { path: \"/tables\" }, function () {\n            this.resource(\"table\", { path: \"/:tableName\" });\n        });\n    });\n\n    exports['default'] = Router;\n\n});","define('storage-explorer/routes/table', ['exports', 'ember', 'storage-explorer/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        beforeModel: function () {\n            var name = this.controllerFor(\"application\").get(\"storageAccountName\");\n            var key = this.controllerFor(\"application\").get(\"storageAccountKey\");\n\n            if (!name || !key) {\n                this.transitionTo(\"application\");\n            }\n        },\n\n        model: function (params) {\n            this.controllerFor(\"tables\").set(\"showProgress\", true);\n\n            var storageAccountName = this.controllerFor(\"application\").get(\"storageAccountName\");\n            var storageAccountKey = this.controllerFor(\"application\").get(\"storageAccountKey\");\n            var url = config['default'].APP.apiHost + \"/tables/\" + params.tableName + \"?account=\" + storageAccountName + \"&key=\" + storageAccountKey;\n            Ember['default'].Logger.info(\"url\", url);\n\n            return Ember['default'].$.getJSON(url).fail(function (error) {\n                throw new Error(error);\n            });\n            //return this.store.fetchById('table', params.tableName);\n        },\n\n        afterModel: function () {\n            this.controllerFor(\"tables\").set(\"showProgress\", false);\n        } });\n\n});","define('storage-explorer/routes/tables', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        beforeModel: function () {\n            var name = this.controllerFor(\"application\").get(\"storageAccountName\");\n            var key = this.controllerFor(\"application\").get(\"storageAccountKey\");\n\n            if (!name || !key) {\n                this.transitionTo(\"application\");\n            }\n        },\n\n        model: function () {\n            this.controllerFor(\"application\").set(\"showProgress\", true);\n            return this.store.find(\"table\");\n        },\n\n        afterModel: function () {\n            this.controllerFor(\"application\").set(\"showProgress\", false);\n        },\n\n        actions: {\n            error: function () {\n                this.controllerFor(\"application\").set(\"showProgress\", false);\n                return true;\n            }\n        }\n    });\n\n});","define('storage-explorer/serializers/row', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTSerializer.extend(DS['default'].EmbeddedRecordsMixin, {\n\t\tnormalize: function (type, hash) {\n\t\t\thash.id = hash.partitionKey + \"/\" + hash.rowKey;\n\t\t\treturn this._super(type, hash);\n\t\t},\n\n\t\tattrs: {\n\t\t\tcolumns: { embedded: \"always\" } }\n\t});\n\n});","define('storage-explorer/serializers/table', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTSerializer.extend(DS['default'].EmbeddedRecordsMixin, {\n\t\tprimaryKey: \"tableName\",\n\n\t\textractArray: function (store, type, payload) {\n\t\t\tconsole.log(payload);\n\t\t\treturn this._super(store, type, payload);\n\t\t},\n\n\t\tattrs: {\n\t\t\trows: { embedded: \"always\" } }\n\t});\n\n});","define('storage-explorer/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"progress progress-striped active\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"progress-bar\");\n          dom.setAttribute(el2,\"style\",\"width: 100%\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"header\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"navbar navbar-default\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"navbar-header\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"type\",\"button\");\n        dom.setAttribute(el4,\"class\",\"navbar-toggle\");\n        dom.setAttribute(el4,\"data-toggle\",\"collapse\");\n        dom.setAttribute(el4,\"data-target\",\".navbar-responsive-collapse\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"icon-bar\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"icon-bar\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"icon-bar\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"navbar-brand\");\n        var el5 = dom.createTextNode(\"Azure Table Storage Explorer\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"navbar-collapse collapse navbar-responsive-collapse\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"nav navbar-nav navbar-right\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        var el6 = dom.createElement(\"a\");\n        dom.setAttribute(el6,\"href\",\"https://github.com/jpoon/StorageExplorer\");\n        var el7 = dom.createTextNode(\"GitHub\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        var el6 = dom.createElement(\"a\");\n        dom.setAttribute(el6,\"href\",\"javascript:void(0)\");\n        dom.setAttribute(el6,\"data-toggle\",\"modal\");\n        dom.setAttribute(el6,\"data-target\",\"#complete-dialog\");\n        var el7 = dom.createTextNode(\"Security\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" Modal \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"complete-dialog\");\n        dom.setAttribute(el1,\"class\",\"modal fade\");\n        dom.setAttribute(el1,\"tabindex\",\"-1\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-dialog\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"modal-content\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-header\");\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"close\");\n        dom.setAttribute(el5,\"data-dismiss\",\"modal\");\n        dom.setAttribute(el5,\"aria-hidden\",\"true\");\n        var el6 = dom.createTextNode(\"×\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h4\");\n        dom.setAttribute(el5,\"class\",\"modal-title\");\n        var el6 = dom.createTextNode(\"Security Disclaimer\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-body\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"p\");\n        var el6 = dom.createTextNode(\"\\n            Storage account credentials are never stored on the server and are transmitted securely (via HTTPS).\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-footer\");\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-primary\");\n        dom.setAttribute(el5,\"data-dismiss\",\"modal\");\n        var el6 = dom.createTextNode(\"Dismiss\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"panel panel-default\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-heading\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        var el4 = dom.createTextNode(\"Storage Account Information\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-body row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"form-group col-md-2\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"form-group col-md-10\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-md-2 col-md-offset-10 text-right\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"submit\");\n        dom.setAttribute(el5,\"class\",\"btn btn-primary btn-raised\");\n        var el6 = dom.createTextNode(\"Load\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [6]);\n        var element1 = dom.childAt(element0, [3, 1]);\n        var element2 = dom.childAt(element1, [5, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),0,1);\n        var morph2 = dom.createMorphAt(element0,4,-1);\n        var morph3 = dom.createMorphAt(fragment,7,8,contextualElement);\n        element(env, element1, context, \"action\", [\"load\"], {\"on\": \"submit\"});\n        inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"accountName\"), \"type\": \"text\", \"class\": \"form-control floating-label\", \"placeholder\": \"storage account name\"});\n        inline(env, morph1, context, \"input\", [], {\"value\": get(env, context, \"accountKey\"), \"type\": \"text\", \"class\": \"form-control floating-label\", \"placeholder\": \"storage account key\"});\n        element(env, element2, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"loadDisabled\")});\n        block(env, morph2, context, \"if\", [get(env, context, \"showProgress\")], {}, child0, null);\n        content(env, morph3, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('storage-explorer/templates/error', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"alert alert-dismissable alert-warning\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"type\",\"button\");\n        dom.setAttribute(el2,\"class\",\"close\");\n        dom.setAttribute(el2,\"data-dismiss\",\"alert\");\n        var el3 = dom.createTextNode(\"×\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"strong\");\n        var el3 = dom.createTextNode(\"Oh snap!\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" (\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\")\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,4,5);\n        var morph1 = dom.createMorphAt(element0,5,6);\n        content(env, morph0, context, \"response\");\n        content(env, morph1, context, \"code\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('storage-explorer/templates/table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"th\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            content(env, morph0, context, \"item\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"thead\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"tr\");\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"th\");\n          var el4 = dom.createTextNode(\"#\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"                \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),2,3);\n          block(env, morph0, context, \"each\", [get(env, context, \"rowHeader\")], {\"keyword\": \"item\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"td\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n              content(env, morph0, context, \"column\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"tr\");\n            var el2 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"td\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"                    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),-1,-1);\n            var morph1 = dom.createMorphAt(element0,2,3);\n            content(env, morph0, context, \"_view.contentIndex\");\n            block(env, morph1, context, \"each\", [get(env, context, \"row\")], {\"keyword\": \"column\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tbody\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,1);\n          block(env, morph0, context, \"each\", [get(env, context, \"rowData\")], {\"keyword\": \"row\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createElement(\"div\");\n        dom.setAttribute(el0,\"class\",\"panel panel-default\");\n        var el1 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"panel-heading\");\n        var el2 = dom.createTextNode(\"\\n        Rows \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"i\");\n        var el3 = dom.createTextNode(\"(\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\")\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"panel-body row\");\n        var el2 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"table\");\n        dom.setAttribute(el2,\"class\",\"table table-striped table-hover\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"        \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [3, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),0,1);\n        var morph1 = dom.createMorphAt(element1,0,1);\n        var morph2 = dom.createMorphAt(element1,1,2);\n        content(env, morph0, context, \"rowCount\");\n        block(env, morph1, context, \"if\", [get(env, context, \"rowHeader\")], {}, child0, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"rowData\")], {}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('storage-explorer/templates/tables', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"               \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            content(env, morph0, context, \"table.id\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"table\", get(env, context, \"table.id\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"progress progress-striped active\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"progress-bar\");\n          dom.setAttribute(el2,\"style\",\"width: 100%\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"panel panel-default\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-heading\");\n        var el3 = dom.createTextNode(\"\\n        Tables \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        var el4 = dom.createTextNode(\"(\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\")\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-body\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 1]),0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),0,1);\n        var morph2 = dom.createMorphAt(element0,4,-1);\n        var morph3 = dom.createMorphAt(fragment,1,2,contextualElement);\n        content(env, morph0, context, \"controller.length\");\n        block(env, morph1, context, \"each\", [get(env, context, \"controller\")], {\"keyword\": \"table\"}, child0, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"showProgress\")], {}, child1, null);\n        content(env, morph3, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('storage-explorer/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/controllers/error.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/error.js should pass jshint', function() { \n    ok(true, 'controllers/error.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/controllers/table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/table.js should pass jshint', function() { \n    ok(true, 'controllers/table.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/helpers/resolver', ['exports', 'ember/resolver', 'storage-explorer/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('storage-explorer/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/helpers/start-app', ['exports', 'ember', 'storage-explorer/app', 'storage-explorer/router', 'storage-explorer/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var App;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      App = Application['default'].create(attributes);\n      App.setupForTesting();\n      App.injectTestHelpers();\n    });\n\n    return App;\n  }\n\n});","define('storage-explorer/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/models/column.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/column.js should pass jshint', function() { \n    ok(true, 'models/column.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/models/row.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/row.js should pass jshint', function() { \n    ok(true, 'models/row.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/models/table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/table.js should pass jshint', function() { \n    ok(true, 'models/table.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/routes/table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/table.js should pass jshint', function() { \n    ok(true, 'routes/table.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/routes/tables.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/tables.js should pass jshint', function() { \n    ok(true, 'routes/tables.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/serializers/row.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/row.js should pass jshint', function() { \n    ok(true, 'serializers/row.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/serializers/table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/table.js should pass jshint', function() { \n    ok(true, 'serializers/table.js should pass jshint.'); \n  });\n\n});","define('storage-explorer/tests/test-helper', ['storage-explorer/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n\tdocument.write(\"<div id=\\\"ember-testing-container\\\"><div id=\\\"ember-testing\\\"></div></div>\");\n\n\tQUnit.config.urlConfig.push({ id: \"nocontainer\", label: \"Hide container\" });\n\tvar containerVisibility = QUnit.urlParams.nocontainer ? \"hidden\" : \"visible\";\n\tdocument.getElementById(\"ember-testing-container\").style.visibility = containerVisibility;\n\n});","define('storage-explorer/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\ndefine('storage-explorer/config/environment', ['ember'], function(Ember) {\n  var prefix = 'storage-explorer';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"storage-explorer/tests/test-helper\");\n} else {\n  require(\"storage-explorer/app\")[\"default\"].create({\"apiHost\":\"http://localhost:3000\",\"LOG_RESOLVER\":true,\"LOG_ACTIVE_GENERATION\":true,\"LOG_TRANSITIONS\":true,\"LOG_TRANSITIONS_INTERNAL\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"storage-explorer\",\"version\":\"0.0.0.4417bad4\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfrlnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"storage-explorer.js"}